%YAML 1.2
---
# See http://www.sublimetext.com/docs/syntax.html
file_extensions:
  - pb
  - pbi
scope: source.purebasic
contexts:

# Included Basic Building Blocks - - - - - - - - - - - - - - - - - - - - - - -

  basics:
    - match: ';'
      scope: punctuation.definition.comment.purebasic
      push:
        - meta_scope: comment.line.purebasic
        - match: $
          pop: true

    - match: '"'
      scope: punctuation.definition.string.begin.purebasic
      push: 
        - meta_scope: string.quoted.double.purebasic
        - match: '"'
          scope: punctuation.definition.string.end.purebasic
          pop: true

    - match: ','
      scope: punctuation.separator.purebasic

    - match: '\b(Break|Case|Continue|Default|Else|End|EndIf|EndSelect|ElseIf|Else|FakeReturn|For|ForEach|Forever|Gosub|Goto|If|Next|Repeat|Select|To|Until|Wend|While)\b'
      scope: keyword.control.purebasic

    - match: '\b(And|Not|Or|XOr)\b'
      scope: keyword.logical.purebasic

      # Integers, floating point numbers and exponential expressions.
    - match: \-?\d+(\.\d+)?(e\-\d+)?
      scope: constant.numeric.purebasic
      
    - match: '\+|-|\*|/|%|<<|>>'
      scope: keyword.operator.arithmetic.purebasic

    - match: '&|\||!|~'
      scope: keyword.operator.bitwise.purebasic

    - match: '(<|>|<>|<=|>=)'
      scope: keyword.comparison.purebasic

    - match: '='
      scope: keyword.assignment.purebasic

    - match: '\b(CompilerSelect|CompilerIf|CompilerElse|CompilerError|CompilerWarning|CompilerEndIf|CompilerSelect|CompilerCase|CompilerDefault|CompilerEndSelect|Debug|EnableASM|EnableExplicit|List|Enumeration|EndEnumeration|EndInterface|Macro|EndMacro|DataSection|EndDataSection|EndWith|ProcedureReturn|Structure|Extends|EndStructure|IncludeFile|XIncludeFile|DeclareModule|EndDeclareModule|Module|EndModule|Swap|With|UseModule|UnuseModule)\b'
      scope: keyword.other.purebasic

    - match: '\b(Global|Protected|Static)\b'
      scope: storage.modifier.purebasic

      # Constants defined by PureBasic. This needs to be expanded. Just a stub for now.
    - match: '#(True|False)\b'
      scope: support.constant.purebasic

      # Constants defined by the user.
    - match: '#([\w_]+)\b'
      scope: variable.other.constant.purebasic

# Calls  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    - match: \b(\w+)(\()
      captures:
        1: entity.name.function.purebasic
        2: punctuation.section.parens.begin.purebasic
      push:
        - meta_scope: meta.function-call.purebasic
        - include: basics
        - match: \)
          scope: punctuation.section.parens.end.purebasic
          pop: true

# Root - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  main:
    - match: ^\s*(Define)((\.)(\w+))?\s+
      captures:
        1: keyword.declaration.purebasic
        3: punctuation.separator.purebasic
        4: storage.type.purebasic
      push:
        - include: basics
        - match: \b(\w+)((\.)(\w+))?\b
          captures:
            1: variable.other.purebasic
            3: punctuation.separator.purebasic
            4: storage.type.purebasic
        - match: '$'
          pop: true

    - match: \b((Re)?Dim)\s+(\w+)((\.)(\w+))?(\()
      captures:
        1: keyword.declaration.purebasic
        3: entity.name.function.purebasic
        5: punctuation.separator.purebasic
        6: storage.type.purebasic
        7: punctuation.section.parens.begin.purebasic
        8: punctuation.section.parens.end.purebasic
      push:
        - include: basics
        - match: \)
          scope: punctuation.section.parens.end.purebasic
          pop: true

    - match: \b(NewList)\s+(\w+)((\.)(\w+))?(\()(\))
      captures:
        1: keyword.declaration.purebasic
        2: entity.name.function.purebasic
        4: punctuation.separator.purebasic
        5: meta.function.return-type.purebasic storage.type.purebasic
        6: punctuation.section.parens.begin.purebasic
        7: punctuation.section.parens.end.purebasic

    - match: \b(NewMap)\s+(\w+)((\.)(\w+))?(\()(\d+)?(\))
      captures:
        1: keyword.declaration.purebasic
        2: entity.name.function.purebasic
        4: punctuation.separator.purebasic
        5: meta.function.return-type.purebasic storage.type.purebasic
        6: punctuation.section.parens.begin.purebasic
        7: constant.numeric.purebasic
        8: punctuation.section.parens.end.purebasic

    - match: \b(Interface)\s+(\w+)\b
      captures:
        1: keyword.declaration.purebasic
        2: entity.name.interface.purebasic
      push:
        - meta_scope: meta.interface.purebasic
        - include: basics
        - match: \bEndInterface\b
          pop: true
    
    - include: basics

# Forward Declarations - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

    - match: \b(Declare|DeclareCDLL|DeclareDLL)((\.)(\w+))?\s+(\w+)(\()
      captures:
        1: keyword.declaration.function.purebasic
        3: punctuation.separator.purebasic
        4: meta.function.return-type.purebasic storage.type.purebasic
        5: entity.name.function.forward-decl.purebasic
        6: punctuation.section.parens.begin.purebasic
      push:
        - meta_content_scope: meta.function.parameters.purebasic
        - include: basics
        - match: \)
          scope: punctuation.section.parens.end.purebasic
          pop: true

# Procedures - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

    - match: \b(Procedure|ProcedureC|ProcedureCDLL|ProcedureDLL)((\.)(\w+))?\s+(\w+)
      captures:
        1: keyword.declaration.function.purebasic
        3: punctuation.separator.purebasic
        4: meta.function.return-type.purebasic storage.type.purebasic
        5: entity.name.function.purebasic
      push: procedure_implementation

  procedure_implementation:
    - meta_scope: meta.function.purebasic
    - include: main
    - match: \(
      scope: punctuation.section.parens.begin.purebasic
      set: procedure_implementation_parameters
    - match: \bEndProcedure\b
      scope: keyword.other.purebasic
      pop: true

  procedure_implementation_parameters:
    - meta_content_scope: meta.function.parameters.purebasic
    - include: basics
    - match: \)
      scope: punctuation.section.parens.end.purebasic
      set: procedure_implementation